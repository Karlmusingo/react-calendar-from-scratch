{"version":3,"sources":["calendars/DisplayText.js","calendars/Event.js","utils/constants.js","utils/compareDate.js","calendars/DayCalendar.js","calendars/WeekCalendar.js","utils/displayHours.js","calendars/DisplayEvent.js","calendars/MonthCalendar.js","calendars/VerticalDayCalendar.js","calendars/index.js","App.jsx","serviceWorker.js","index.js"],"names":["DisplayText","text","name","style","defaultProps","Event","ttitle","title","className","weekdays","months","monthsShort","compareDate","date1","date2","getDate","getMonth","getYear","addSuffix","date","moduloTen","moduloHundred","DayCalendar","events","onDayChange","day","setDay","calendarBody","useRef","useEffect","startOn","getHours","hour","current","scrollBy","top","left","sort","a","b","startTime","history","id","marginLeft","onClick","newDay","Date","moment","add","prev","role","getDay","next","prevMonth","getFullYear","nextMonth","ref","Array","map","el","index","key","Math","random","event","time","minutPush","getMinutes","duration","endTime","getTime","exist","filter","push","length","width","today","WeekCalendar","onWeekChange","monthDefault","yearDefault","firstDayOfTheWeekDefault","useState","month","setMonth","year","setYear","firstDayOfTheWeek","setFirstDayOfTheWeek","lastDayOfTheWeek","setLastDayOfTheWeek","startOfTheWeek","endOfTheWeek","dispalyMonth","weekday","toDateString","slice","value","trunc","marginTop","height","DisplayEvent","MonthCalendar","onMonthChange","numberOfDays","numberOfDaysPreviousMonth","skipDays","fill","keys","i","allEvents","document","querySelectorAll","titleText","eventsDefault","Calendar","dayOrientation","defautlCalendarView","defaultDate","calendarView","setCalendarView","calendarSetting","view","position","VerticalDayCalendar","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2eae58d1.chunk.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DisplayText = ({ text, name, style = {} }) => (\n  <span style={style}>\n    {text}\n    <a>{name}</a>\n  </span>\n);\n\nDisplayText.propTypes = {\n  text: PropTypes.string,\n  name: PropTypes.string,\n  style: PropTypes.object,\n};\n\nDisplayText.defaultProps = {\n  style: {},\n};\n\nexport default DisplayText;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DisplayText from './DisplayText';\n\nconst Event = ({ ttitle, title, style }) => (\n  <div className=\"event\" style={style}>\n    <DisplayText text={ttitle} name={title} />\n  </div>\n);\n\nEvent.propTypes = {\n  ttitle: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  style: PropTypes.object.isRequired,\n};\n\nexport default Event;\n","export const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const cellHeight = 19;\nexport const cellWidthDayView = 150;\nexport const cellHeightVerticalDayView = 48;\nexport const monthsShort = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n","const compareDate = (date1, date2) => date1.getDate() === date2.getDate()\n && date1.getMonth() === date2.getMonth()\n&& date1.getYear() === date2.getYear();\n\nexport default compareDate;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable no-use-before-define */\n/* eslint-disable one-var */\n/* eslint-disable react/prop-types */\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport DisplayText from './DisplayText';\nimport Event from './Event';\nimport { weekdays, months, cellWidthDayView } from '../utils/constants';\nimport compareDate from '../utils/compareDate';\nimport '../styles/dayCalendar.scss';\n\nexport const addSuffix = (date) => {\n  const moduloTen = date % 10,\n    moduloHundred = date % 100;\n  if (moduloTen === 1 && moduloHundred !== 11) {\n    return `${date}st`;\n  }\n  if (moduloTen === 2 && moduloHundred !== 12) {\n    return `${date}nd`;\n  }\n  if (moduloTen === 3 && moduloHundred !== 13) {\n    return `${date}rd`;\n  }\n  return `${date}th`;\n};\n\nconst DayCalendar = ({\n  events = [], onDayChange, day, setDay,\n}) => {\n  const calendarBody = useRef(null);\n\n  useEffect(() => {\n    startOn(day.getHours());\n  }, [day]);\n\n  const formatHours = (hour) => {\n    if (hour > 12) return `${hour - 12}PM`;\n    if (hour === 12) return `${hour}PM`;\n    return `${hour}AM`;\n  };\n  const startOn = (hour) => {\n    calendarBody.current.scrollBy({\n      top: 0,\n      left: hour * cellWidthDayView,\n    });\n  };\n\n  const next = () => {\n    const newDay = new Date(moment(day).add(1, 'day'));\n    setDay(newDay);\n    onDayChange(day, newDay);\n  };\n\n  const prev = () => {\n    const newDay = new Date(moment(day).add(-1, 'week'));\n    setDay(newDay);\n    onDayChange(day, newDay);\n  };\n\n  const nextMonth = () => {\n    const newDay = new Date(moment(day).add(1, 'month'));\n    setDay(newDay);\n    onDayChange(day, newDay);\n  };\n\n  const prevMonth = () => {\n    const newDay = new Date(moment(day).add(-1, 'month'));\n    setDay(newDay);\n    onDayChange(day, newDay);\n  };\n\n  events.sort((a, b) => a.startTime.getHours() - b.startTime.getHours());\n\n  const history = [];\n\n  return (\n    <div id=\"day-calendar\">\n      <div className=\"calendar-header\">\n        <div className=\"month\" style={{ marginLeft: '430px' }}>\n          <ul>\n            <li className=\"navigation\" onClick={() => prev()} role=\"button\">&#10094;</li>\n            <li>\n              <DisplayText text={`${weekdays[day.getDay()]} ${addSuffix(day.getDate())}`} />\n            </li>\n            <li role=\"button\" className=\"navigation\" onClick={() => next()}>&#10095;</li>\n          </ul>\n        </div>\n        <div className=\"month\">\n          <ul>\n            <li className=\"navigation\" onClick={() => prevMonth()}>&#10094;</li>\n            <li className=\"\">\n              <DisplayText text={`${months[day.getMonth()]} ${day.getFullYear()}`} />\n            </li>\n            <li className=\"navigation\" onClick={() => nextMonth()}>&#10095;</li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"calendar-body\" ref={calendarBody}>\n        <ul id=\"day-time\">\n          {\n           [...(Array(24))].map((el, index) => (\n             <li key={Math.random()}>\n               <DisplayText text={formatHours(index)} />\n             </li>\n           ))\n         }\n        </ul>\n\n        <ul id=\"days\">\n\n          {\n              events.map((event) => {\n                if (!compareDate(event.startTime, day)) return null;\n                event.startTime = new Date(event.startTime);\n                const time = event.startTime.getHours();\n                const minutPush = event.startTime.getMinutes() * (cellWidthDayView / 60);\n                const duration = ((event.endTime.getTime() - event.startTime.getTime())\n                / 60000) * (cellWidthDayView / 60);\n                const exist = history.filter((el) => el.time === time\n                                 || (\n                                   (el.time * cellWidthDayView + el.minutPush)\n                                 < (time * cellWidthDayView + minutPush)\n                                 && (time * cellWidthDayView + minutPush)\n                                 < (el.time * cellWidthDayView + el.minutPush + el.duration)));\n\n                history.push({ time, duration, minutPush });\n                return (\n                  <Event\n                    key={Math.random()}\n                    style={{\n                      left: `${time * cellWidthDayView}px`,\n                      top: `${exist.length * 32}px`,\n                      marginLeft: `${minutPush}px`,\n                      width: `${duration}px`,\n                    }}\n                    ttitle={event.title}\n                  />\n                );\n              })\n           }\n          {[...(Array(24 * 18))].map(() => (\n            <li style={{}} key={Math.random()} />\n          ))}\n        </ul>\n      </div>\n\n    </div>\n  );\n};\n\nDayCalendar.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      startTime: PropTypes.object,\n      fontSize: PropTypes.number,\n    }),\n  ),\n};\n\nexport default DayCalendar;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-shadow */\n/* eslint-disable react/require-default-props */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {\n  weekdays, months, cellHeight, monthsShort,\n} from '../utils/constants';\nimport displayHours from '../utils/displayHours';\nimport Event from './Event';\nimport DisplayText from './DisplayText';\nimport '../styles/WeekCalendars.scss';\n\nconst today = new Date();\n\nconst WeekCalendar = ({\n  events = [], onWeekChange, day, setDay,\n}) => {\n  const monthDefault = day.getMonth();\n  const yearDefault = day.getFullYear();\n  const firstDayOfTheWeekDefault = day.getDate() - day.getDay();\n\n  const [month, setMonth] = useState(monthDefault);\n  const [year, setYear] = useState(yearDefault);\n  const [firstDayOfTheWeek, setFirstDayOfTheWeek] = useState(firstDayOfTheWeekDefault);\n  const [lastDayOfTheWeek, setLastDayOfTheWeek] = useState(new Date(year, month,\n    firstDayOfTheWeekDefault + 6).getDate());\n\n  const dispalyMonth = () => {\n    const startOfTheWeek = new Date(year, month, day.getDate() - day.getDay());\n    const endOfTheWeek = new Date(year, month, firstDayOfTheWeekDefault + 6);\n    if (startOfTheWeek.getMonth() !== endOfTheWeek.getMonth()) {\n      if (startOfTheWeek.getFullYear() !== endOfTheWeek.getFullYear()) {\n        return `${monthsShort[startOfTheWeek.getMonth()]} ${startOfTheWeek.getFullYear()} - \n                        ${monthsShort[endOfTheWeek.getMonth()]} ${endOfTheWeek.getFullYear()}`;\n      }\n      return `${monthsShort[startOfTheWeek.getMonth()]} - ${monthsShort[endOfTheWeek.getMonth()]} ${year}`;\n    }\n    return `${months[month]} ${year}`;\n  };\n\n  // const numberOfDays = new Date(year, month + 1, 0).getDate();\n\n  useEffect(() => {\n    setMonth(day.getMonth());\n    setYear(day.getFullYear());\n    setFirstDayOfTheWeek(day.getDate() - day.getDay());\n    setLastDayOfTheWeek(new Date(year, month, firstDayOfTheWeekDefault + 6).getDate());\n    const startOfTheWeek = new Date(year, month, day.getDate() - day.getDay());\n    const endOfTheWeek = new Date(year, month, firstDayOfTheWeekDefault + 6);\n    onWeekChange(startOfTheWeek, endOfTheWeek);\n  }, [day, firstDayOfTheWeekDefault, month, onWeekChange, year]);\n\n  const next = () => {\n    const newDay = new Date(moment(day).add(1, 'week'));\n    setDay(newDay);\n  };\n\n  const prev = () => {\n    const newDay = new Date(moment(day).add(-1, 'week'));\n    setDay(newDay);\n  };\n\n  const nextMonth = () => {\n    const newDay = new Date(moment(day).add(1, 'month'));\n    setDay(newDay);\n  };\n\n  const prevMonth = () => {\n    const newDay = new Date(moment(day).add(-1, 'month'));\n    setDay(newDay);\n  };\n\n  return (\n    <div id=\"week-calendar\">\n      <div className=\"calendar-header\">\n        <div className=\"month day\">\n          <ul>\n            <li className=\"navigation\" onClick={() => prev()}>&#10094;</li>\n            <li>\n              <DisplayText text={`Sun ${new Date(year, month, firstDayOfTheWeek).getDate()} - Sat ${lastDayOfTheWeek}`} />\n            </li>\n            <li className=\"navigation\" onClick={() => next()}>&#10095;</li>\n          </ul>\n        </div>\n        <div className=\"month\">\n          <ul>\n            <li className=\"navigation\" onClick={() => prevMonth()}>&#10094;</li>\n            <li className=\"\">\n              <DisplayText text={dispalyMonth()} />\n            </li>\n            <li className=\"navigation\" onClick={() => nextMonth()}>&#10095;</li>\n          </ul>\n        </div>\n      </div>\n      <ul id=\"weekdays\">\n        <li>Time</li>\n        {\n           weekdays.map((weekday, index) => (\n             <li key={Math.random()}>\n               <span\n                 className={weekday && weekday === today.toDateString().slice(0, 3)\n                  && day.getDate() === today.getDate()\n                   && month === today.getMonth()\n                    && year === today.getFullYear() ? 'currentDay' : ' '}\n               >\n                 {`${weekday} ${new Date(year, month, firstDayOfTheWeek + index).getDate()}`}\n               </span>\n             </li>\n           ))\n         }\n      </ul>\n      <ul id=\"days\">\n        {[...(Array(188))].map((value, index) => (\n          <li>\n            {\n              index % 8 === 0 ? (\n                <span className=\"hours\">\n                  {displayHours(index / 8)}\n                </span>\n              ) : null\n            }\n            {\n\n             events.map((event) => {\n               const startOfTheWeek = new Date(year, month, firstDayOfTheWeek).getTime();\n               const endOfTheWeek = new Date(year, month, lastDayOfTheWeek).getTime();\n               if (startOfTheWeek <= event.startTime.getTime()\n               && event.startTime.getTime() <= endOfTheWeek) {\n                 if ((index % 7) === event.startTime.getDay()) {\n                   if (event.startTime.getHours() === Math.trunc(index / 7)) {\n                     const minutPush = event.startTime.getMinutes() * (cellHeight / 60);\n                     const duration = ((event.endTime.getTime() - event.startTime.getTime())\n                      / 60000) * (cellHeight / 60);\n                     return (\n                       <div>\n                         <Event\n                           key={Math.random()}\n                           ttitle={event.title}\n                           title={`${event.startTime.getHours()}:${event.startTime.getMinutes()} PM`}\n                           style={{\n                             marginTop: `${minutPush}px`,\n                             height: `${duration}px`,\n                           }}\n                         />\n                       </div>\n                     );\n                   }\n                 }\n                 return null;\n               }\n               return null;\n             })\n           }\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nWeekCalendar.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      startTime: PropTypes.object,\n      fontSize: PropTypes.number,\n    }),\n  ),\n};\n\nexport default WeekCalendar;\n","/* eslint-disable no-mixed-operators */\n\nexport default (hour) => {\n  if (hour > 12) return `${(hour)}:00 PM`;\n  if (hour === 12) return `${hour}:00 PM`;\n  if (hour < 12 && hour === 10 || hour === 11) return `${hour}:00 AM`;\n  return `0${hour}:00 AM`;\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DisplayEvent = ({\n  text, ttitle, title, name, style = {},\n}) => (\n  <span style={style}>\n    <ul>\n      <a>\n        {ttitle}\n        {text}\n&nbsp;&nbsp;\n        {name}\n        {title}\n      </a>\n\n    </ul>\n\n  </span>\n);\n\nDisplayEvent.propTypes = {\n  text: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  ttitle: PropTypes.string,\n  title: PropTypes.string,\n  style: PropTypes.object,\n};\n\nDisplayEvent.defaultProps = {\n  style: {},\n};\n\nexport default DisplayEvent;\n","/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { weekdays, months } from '../utils/constants';\nimport DisplayText from './DisplayText';\nimport DisplayEvent from './DisplayEvent';\nimport '../styles/MonthCalendar.scss';\n\nconst today = new Date();\n\nconst MonthCalendar = ({\n  events, onMonthChange, day, setDay,\n}) => {\n  const [month, setMonth] = useState(day.getMonth());\n  const [year, setYear] = useState(day.getFullYear());\n\n  const numberOfDays = new Date(year, month + 1, 0).getDate();\n  const numberOfDaysPreviousMonth = new Date(year, month, 0).getDate();\n  const skipDays = new Date(year, month).getDay();\n\n  useEffect(() => {\n    setMonth(day.getMonth());\n    setYear(day.getFullYear());\n    onMonthChange(month, year);\n  }, [day, onMonthChange, month, year]);\n\n  const next = () => {\n    const newDay = new Date(moment(day).add(1, 'month'));\n    setDay(newDay);\n  };\n\n  const prev = () => {\n    const newDay = new Date(moment(day).add(-1, 'month'));\n    setDay(newDay);\n  };\n\n  return (\n    <div id=\"month-calendar\">\n      <div className=\"calendar-header\">\n        <div className=\"month\">\n          <ul>\n            <li id=\"prev\" className=\"navigation\" onClick={() => prev()}>&#10094;</li>\n            <li id=\"month\">\n              <DisplayText text={`${months[month]} ${year}`} />\n            </li>\n            <li id=\"next\" className=\"navigation\" onClick={() => next()}>&#10095;</li>\n          </ul>\n        </div>\n      </div>\n\n      <ul id=\"weekdays\">\n        {\n           // eslint-disable-next-line no-shadow\n           weekdays.map((day) => (\n             <li key={Math.random()}>\n               {day}\n             </li>\n           ))\n         }\n      </ul>\n\n      <ul id=\"days\">\n        {\n          [\n            ...(Array(skipDays)).fill('*'),\n            ...Array(numberOfDays).keys(),\n            ...Array(42 - (skipDays + numberOfDays)).keys(),\n          // eslint-disable-next-line no-shadow\n          ].map((day, index) => (\n            day === '*'\n              ? (\n                <li className=\"empty-cells\" key={Math.random()}>\n                  { numberOfDaysPreviousMonth - (skipDays - 1) + index }\n                </li>\n              )\n              : (\n                <li className={index > (numberOfDays + skipDays - 1) ? 'empty-cells' : ' '} key={Math.random()}>\n                  {\n                  day + 1 && day + 1 === today.getDate() && today.getMonth() === month\n                  && today.getFullYear() === year ? (\n                    <span className=\"currentDay\">\n                      {day + 1}\n                    </span>\n                    ) : day + 1\n              }\n             &nbsp;\n                  <br />\n                  {\n                  events.map((event) => {\n                    if (day + 1 === event.startTime.getDate()\n                     && month === event.startTime.getMonth()) {\n                      return (\n                        <DisplayEvent\n                          className=\"event-month-calendar\"\n                          key={Math.random()}\n                          text={`${event.startTime.getHours()}:${event.startTime.getMinutes()}`}\n                          name={event.title}\n                        />\n                      );\n                    }\n                  })\n                }\n                </li>\n              )\n          ))\n        }\n\n      </ul>\n    </div>\n  );\n};\n\nexport default MonthCalendar;\n","/* eslint-disable no-plusplus */\n/* eslint-disable react/prop-types */\n/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-use-before-define */\n/* eslint-disable react/require-default-props */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport DisplayText from './DisplayText';\nimport Event from './Event';\nimport { weekdays, months, cellHeightVerticalDayView } from '../utils/constants';\nimport compareDate from '../utils/compareDate';\nimport '../styles/verticalDayCalendar.scss';\n\nexport const addSuffix = (date) => {\n  const moduloTen = date % 10;\n  const moduloHundred = date % 100;\n  if (moduloTen === 1 && moduloHundred !== 11) {\n    return `${date}st`;\n  }\n  if (moduloTen === 2 && moduloHundred !== 12) {\n    return `${date}nd`;\n  }\n  if (moduloTen === 3 && moduloHundred !== 13) {\n    return `${date}rd`;\n  }\n  return `${date}th`;\n};\n\nconst DayCalendar = ({\n  events = [], onDayChange, day, setDay,\n}) => {\n  const calendarBody = useRef(null);\n\n  useEffect(() => {\n    let i = 0;\n    const allEvents = document.querySelectorAll('.event');\n    for (i = 0; i < allEvents.length; i++) {\n      allEvents[i].style.width = `${98 / allEvents.length}%`;\n    }\n    startOn(day.getHours());\n  }, [day]);\n\n\n  const formatHours = (hour) => {\n    if (hour > 12) return `${hour - 12}PM`;\n    if (hour === 12) return `${hour}PM`;\n    return `${hour}AM`;\n  };\n  const startOn = (hour) => {\n    calendarBody.current.scrollBy({\n      top: hour * cellHeightVerticalDayView,\n      left: 0,\n    });\n  };\n\n  const next = () => {\n    const newDay = new Date(moment(day).add(1, 'day'));\n    setDay(newDay);\n    onDayChange(day, newDay);\n  };\n\n  const prev = () => {\n    const newDay = new Date(moment(day).add(-1, 'week'));\n    setDay(newDay);\n    onDayChange(day, newDay);\n  };\n\n  const nextMonth = () => {\n    const newDay = new Date(moment(day).add(1, 'month'));\n    setDay(newDay);\n    onDayChange(day, newDay);\n  };\n\n  const prevMonth = () => {\n    const newDay = new Date(moment(day).add(-1, 'month'));\n    setDay(newDay);\n    onDayChange(day, newDay);\n  };\n\n  events.sort((a, b) => a.startTime.getHours() - b.startTime.getHours());\n\n  const history = [];\n\n  return (\n    <div id=\"vertical-day-calendar\">\n      <div className=\"calendar-header\">\n        <div className=\"month\" style={{ marginLeft: '196px' }}>\n          <ul>\n            <li\n              className=\"navigation\"\n              onClick={() => prev()}\n              role=\"button\"\n            >\n&#10094;\n            </li>\n            <li>\n              <DisplayText text={`${weekdays[day.getDay()]} ${addSuffix(day.getDate())}`} />\n            </li>\n            <li role=\"button\" className=\"navigation\" onClick={() => next()}>&#10095;</li>\n          </ul>\n        </div>\n        <div className=\"month\">\n          <ul>\n            <li className=\"navigation\" onClick={() => prevMonth()}>&#10094;</li>\n            <li className=\"\">\n              <DisplayText text={`${months[day.getMonth()]} ${day.getFullYear()}`} />\n            </li>\n            <li className=\"navigation\" onClick={() => nextMonth()}>&#10095;</li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"calendar-body\" ref={calendarBody}>\n        <ul id=\"days\">\n          {[...(Array(24 * 2))].map((value, index) => {\n            if (index % 2 === 0) {\n              return (\n                <li className=\"hour\" key={Math.random()}>\n                  <DisplayText text={formatHours(index / 2)} />\n                </li>\n              );\n            }\n            return (\n              <li className=\"events-cells\" style={{}} key={Math.random()}>\n                {\n                events.map((event) => {\n                  if (!compareDate(event.startTime, day)) return null;\n                  event.startTime = new Date(event.startTime);\n                  const time = event.startTime.getHours();\n                  if (index !== (time * 2) + 1) return null;\n                  const minutPush = event.startTime.getMinutes() * (cellHeightVerticalDayView / 60);\n                  const duration = ((event.endTime.getTime() - event.startTime.getTime())\n                        / 60000) * (cellHeightVerticalDayView / 60);\n                  const exist = history.filter((el) => el.time === time\n                                  || (\n                                    (el.time * cellHeightVerticalDayView + el.minutPush)\n                                  < (time * cellHeightVerticalDayView + minutPush)\n                                  && (time * cellHeightVerticalDayView + minutPush)\n                                  < (el.time * cellHeightVerticalDayView\n                                    + el.minutPush + el.duration)));\n                  history.push({ time, duration, minutPush });\n                  return (\n                    <Event\n                      key={Math.random()}\n                      style={{\n                        height: `${duration}px`,\n                        marginTop: `${minutPush}px`,\n                      }}\n                      title={event.title}\n                    />\n                  );\n                })\n              }\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n    </div>\n  );\n};\n\nDayCalendar.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      startTime: PropTypes.instanceOf(Date),\n      endTime: PropTypes.instanceOf(Date),\n    }),\n  ),\n};\n\nexport default DayCalendar;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/button-has-type */\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport DayCalendar from './DayCalendar';\nimport WeekCalendar from './WeekCalendar';\nimport MonthCalendar from './MonthCalendar';\nimport VerticalDayCalendar from './VerticalDayCalendar';\nimport '../styles/calendarEvents.scss';\n\n\nconst titleText = 'working in the weekend';\n\nconst eventsDefault = [\n  {\n    startTime: new Date(moment().add(2, 'hour')),\n    endTime: new Date(moment().add(3, 'hour')),\n    title: `${titleText}`,\n  },\n  {\n    startTime: new Date(moment().add(-3, 'hour')),\n    endTime: new Date(moment().add(-2, 'hour')),\n    title: `${titleText}`,\n  },\n  {\n    startTime: new Date(),\n    endTime: new Date(moment().add(1, 'hour')),\n    title: `${titleText}`,\n  },\n];\n\nconst Calendar = ({\n  events = eventsDefault, dayOrientation = 'horizontal', defautlCalendarView = 'week',\n  defaultDate = new Date(), onDayChange, onWeekChange, onMonthChange,\n}) => {\n  const [calendarView, setCalendarView] = useState(defautlCalendarView);\n  const [day, setDay] = useState(defaultDate);\n\n  // eslint-disable-next-line no-shadow\n  const formatEventTime = (events) => {\n    const newEvents = events.map((event) => ({\n      ...event,\n      title: event.eventTitle,\n      startTime: new Date(event.startTime),\n      endTime: new Date(event.endTime),\n    }));\n    return newEvents;\n  };\n\n  const calendarSetting = (view) => {\n    setCalendarView(view);\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div className=\"calendar-view-setting\">\n        <button\n          className={calendarView === 'day' ? 'active' : ''}\n          onClick={() => calendarSetting('day')}\n        >\n          D\n        </button>\n        <button\n          className={calendarView === 'week' ? 'active' : ''}\n          onClick={() => calendarSetting('week')}\n        >\n          W\n        </button>\n        <button\n          className={calendarView === 'month' ? 'active' : ''}\n          onClick={() => calendarSetting('month')}\n        >\n          M\n        </button>\n      </div>\n      {calendarView === 'day' ? (\n        dayOrientation === 'horizontal' ? <DayCalendar events={events} onDayChange={onDayChange} day={day} setDay={setDay} /> : <VerticalDayCalendar events={events} onDayChange={onDayChange} day={day} setDay={setDay} />\n      ) : null}\n      {calendarView === 'week' ? <WeekCalendar events={events} onWeekChange={onWeekChange} day={day} setDay={setDay} /> : null}\n      {calendarView === 'month' ? <MonthCalendar events={events} onMonthChange={onMonthChange} day={day} setDay={setDay} /> : null}\n    </div>\n  );\n};\n\nCalendar.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      startTime: PropTypes.instanceOf(Date),\n      endTime: PropTypes.instanceOf(Date),\n    }),\n  ),\n  dayOrientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  onDayChange: PropTypes.func,\n  onWeekChange: PropTypes.func,\n  onMonthChange: PropTypes.func,\n};\n\nCalendar.defaultProps = {\n  onDayChange: () => null,\n  onWeekChange: () => null,\n  onMonthChange: () => null,\n}\n\nexport default Calendar;\n","import React from 'react';\nimport Calendar from './calendars';\nimport './App.scss';\n\nconst App = () => {\n  const anyFunction = () => {\n  };\n\n  return (\n    <div style={{ marginTop: '50px', position: 'relative' }}>\n      <Calendar\n        // onDayChange={(data) => anyFunction(data)}\n        // onWeekChange={(data) => anyFunction(data)}\n        // onMonthChange={(data) => anyFunction(data)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}